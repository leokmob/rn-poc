DROP SCHEMA RedNoteDatabase;USE innodb;CREATE SCHEMA RedNoteDatabase;USE RedNoteDatabase;CREATE TABLE PartnerStore (PartnerStoreID INTEGER  NOT NULL  , PartnerID INTEGER  NULL  , StoreID INTEGER  NULL  , AffiliateID VARCHAR(500)  NULL  , Token VARCHAR(500)  NULL  );ALTER TABLE PartnerStore ADD CONSTRAINT PartnerStore_PK PRIMARY KEY CLUSTERED (PartnerStoreID);CREATE TABLE Sponsor (SponsorID INTEGER  NOT NULL  , OrganizationID INTEGER  NULL  , Name VARCHAR(500)  NULL  , LoURL VARCHAR(500)  NULL  , BackgroundColor VARCHAR(500)  NULL  , BackgroundURL VARCHAR(500)  NULL  );ALTER TABLE Sponsor ADD CONSTRAINT Sponsor_PK PRIMARY KEY CLUSTERED (SponsorID);CREATE TABLE PurchasePackage (PackageID INTEGER  NOT NULL  , SponsorID INTEGER  NULL  , Name VARCHAR(500)  NULL  , AdditionalInfo VARCHAR(500)  NULL  , MaxCount INTEGER  NULL  );ALTER TABLE PurchasePackage ADD CONSTRAINT PurchasePackage_PK PRIMARY KEY CLUSTERED (PackageID);CREATE TABLE MusicClip (MusicClipID INTEGER  NOT NULL  , OriginalSongID INTEGER  NULL  , Name VARCHAR(500)  NULL  , Lyrics VARCHAR(5000)  NULL  , Mood VARCHAR(50)  NULL  , SubMood VARCHAR(50)  NULL  , TimeMS INTEGER  NULL  , SizeKB INTEGER  NULL  , FileType VARCHAR(10)  NULL  , FileURL VARCHAR(500)  NULL  );ALTER TABLE MusicClip ADD CONSTRAINT MusicClip_PK PRIMARY KEY CLUSTERED (MusicClipID);CREATE TABLE OriginalSong (OriginalSongID INTEGER  NOT NULL  , Name VARCHAR(500)  NULL  , Artist VARCHAR(500)  NULL  , Album VARCHAR(500)  NULL  , Track INTEGER  NULL  , Lyrics VARCHAR(5000)  NULL  , Genre VARCHAR(500)  NULL  );ALTER TABLE OriginalSong ADD CONSTRAINT OriginalSong_PK PRIMARY KEY CLUSTERED (OriginalSongID);CREATE TABLE Store (StoreID INTEGER  NOT NULL  , Name VARCHAR(500)  NULL  );ALTER TABLE Store ADD CONSTRAINT Store_PK PRIMARY KEY CLUSTERED (StoreID);CREATE TABLE RedNote (RedNoteID INTEGER  NOT NULL  , MusicClipID INTEGER  NULL  , PackageID INTEGER  NULL  , MaxCount INTEGER  NULL  );ALTER TABLE RedNote ADD CONSTRAINT RedNote_PK PRIMARY KEY CLUSTERED (RedNoteID);CREATE TABLE ClickEvent (TrackingID INTEGER  NOT NULL  , DateTime DATETIME  NOT NULL  , EventType VARCHAR(500)  NOT NULL  , EndUserID INTEGER  NULL  , MessageID INTEGER  NULL  , RedNoteID INTEGER  NULL  , PartnerID INTEGER  NULL  , Hostname VARCHAR(500)  NULL  , SomeRequestParams VARCHAR(500)  NULL  , CustomerID INTEGER  NULL  , IPAddress VARCHAR(50)  NULL  , UserAgent VARCHAR(500)  NULL  );ALTER TABLE ClickEvent ADD CONSTRAINT ClickEvent_PK PRIMARY KEY CLUSTERED (TrackingID);CREATE TABLE AttributeType (AttributeTypeID INTEGER  NOT NULL  , Name VARCHAR(500)  NULL  , Description VARCHAR(500)  NULL  );ALTER TABLE AttributeType ADD CONSTRAINT AttributeType_PK PRIMARY KEY CLUSTERED (AttributeTypeID);CREATE TABLE BlockedAddresses (BlockedAddreddID INTEGER  NOT NULL  , Address VARCHAR(500)  NOT NULL  );ALTER TABLE BlockedAddresses ADD CONSTRAINT BlockedAddresses_PK PRIMARY KEY CLUSTERED (BlockedAddreddID);CREATE TABLE SongStorePartner (SongStorePartnerID INTEGER  NOT NULL  , PartnerID INTEGER  NULL  , SongStoreID INTEGER  NULL  , URL VARCHAR(500)  NOT NULL  , ArtURL VARCHAR(500)  NULL  );ALTER TABLE SongStorePartner ADD CONSTRAINT SongStorePartner_PK PRIMARY KEY CLUSTERED (SongStorePartnerID);CREATE TABLE Message (MessageID INTEGER  NOT NULL  , RedNoteID INTEGER  NULL  , OriginPartnerID INTEGER  NULL  , State VARCHAR(500)  NOT NULL  , ModifiedDate DATETIME  NOT NULL  , FromAddress VARCHAR(500)  NULL  , ToAddress VARCHAR(500)  NULL  , Text VARCHAR(500)  NULL  , DateSent DATETIME  NULL  , IsSponsorMessage INTEGER  NULL  , CreatedByUserID INTEGER  NULL  , EndUserID INTEGER  NULL  );ALTER TABLE Message ADD CONSTRAINT Message_PK PRIMARY KEY CLUSTERED (MessageID);CREATE TABLE SongStore (SongStoreID INTEGER  NOT NULL  , StoreID INTEGER  NULL  , OriginalSongID INTEGER  NULL  , SongIdentifier VARCHAR(500)  NOT NULL  , URL VARCHAR(500)  NULL  );ALTER TABLE SongStore ADD CONSTRAINT SongStore_PK PRIMARY KEY CLUSTERED (SongStoreID);CREATE TABLE Partner (PartnerID INTEGER  NOT NULL  , OrganizationID INTEGER  NULL  , Name VARCHAR(500)  NULL  );ALTER TABLE Partner ADD CONSTRAINT Partner_PK PRIMARY KEY CLUSTERED (PartnerID);CREATE TABLE Role (RoleID INTEGER  NOT NULL  , Name VARCHAR(500)  NULL  , Description VARCHAR(500)  NULL  );ALTER TABLE Role ADD CONSTRAINT Role_PK PRIMARY KEY CLUSTERED (RoleID);CREATE TABLE User (UserID INTEGER  NOT NULL  , OrganizationID INTEGER  NULL  , Name VARCHAR(500)  NULL  , UserName VARCHAR(50)  NULL  , Email VARCHAR(500)  NULL  , Etc VARCHAR(500)  NULL  );ALTER TABLE User ADD CONSTRAINT User_PK PRIMARY KEY CLUSTERED (UserID);CREATE TABLE UserRole (UserRoleID INTEGER  NOT NULL  , UserID INTEGER  NULL  , RoleID INTEGER  NULL  );ALTER TABLE UserRole ADD CONSTRAINT UserRole_PK PRIMARY KEY CLUSTERED (UserRoleID);CREATE TABLE Organization (OrganizationID INTEGER  NOT NULL  , Name VARCHAR(500)  NULL  , Address VARCHAR(500)  NULL  , State VARCHAR(500)  NULL  , City VARCHAR(500)  NULL  , Etc VARCHAR(500)  NULL  );ALTER TABLE Organization ADD CONSTRAINT Organization_PK PRIMARY KEY CLUSTERED (OrganizationID);CREATE TABLE EndUser (EndUserID INTEGER  NOT NULL  , UserName VARCHAR(50)  NULL  , AccountType VARCHAR(500)  NULL  , DOB DATE  NULL  , PhoneNumber VARCHAR(50)  NULL  , Email VARCHAR(500)  NULL  , Token VARCHAR(500)  NULL  );ALTER TABLE EndUser ADD CONSTRAINT EndUser_PK PRIMARY KEY CLUSTERED (EndUserID);CREATE TABLE EndUserAttributeValue (AttributeValueID INTEGER  NOT NULL  , EndUserID INTEGER  NULL  , AttributeTypeID INTEGER  NULL  , Value VARCHAR(500)  NULL  );ALTER TABLE EndUserAttributeValue ADD CONSTRAINT EndUserAttributeValue_PK PRIMARY KEY CLUSTERED (AttributeValueID);/*ALTER TABLE PartnerStore WITH CHECK ADD CONSTRAINT Store_PartnerStore_FK1 FOREIGN KEY (StoreID)REFERENCES Store (StoreID)ALTER TABLE PartnerStore WITH CHECK ADD CONSTRAINT Partner_PartnerStore_FK1 FOREIGN KEY (PartnerID)REFERENCES Partner (PartnerID)ALTER TABLE Sponsor WITH CHECK ADD CONSTRAINT Organization_Sponsor_FK1 FOREIGN KEY (OrganizationID)REFERENCES Organization (OrganizationID)ALTER TABLE PurchasePackage WITH CHECK ADD CONSTRAINT Sponsor_PurchasePackage_FK1 FOREIGN KEY (SponsorID)REFERENCES Sponsor (SponsorID)ALTER TABLE MusicClip WITH CHECK ADD CONSTRAINT OriginalSong_MusicClip_FK1 FOREIGN KEY (OriginalSongID)REFERENCES OriginalSong (OriginalSongID)ALTER TABLE RedNote WITH CHECK ADD CONSTRAINT MusicClip_RedNote_FK1 FOREIGN KEY (MusicClipID)REFERENCES MusicClip (MusicClipID)ALTER TABLE RedNote WITH CHECK ADD CONSTRAINT PurchasePackage_RedNote_FK1 FOREIGN KEY (PackageID)REFERENCES PurchasePackage (PackageID)ALTER TABLE ClickEvent WITH CHECK ADD CONSTRAINT EndUser_ClickEvent_FK1 FOREIGN KEY (EndUserID)REFERENCES EndUser (EndUserID)ALTER TABLE ClickEvent WITH CHECK ADD CONSTRAINT Partner_ClickEvent_FK1 FOREIGN KEY (PartnerID)REFERENCES Partner (PartnerID)ALTER TABLE ClickEvent WITH CHECK ADD CONSTRAINT RedNote_ClickEvent_FK1 FOREIGN KEY (RedNoteID)REFERENCES RedNote (RedNoteID)ALTER TABLE ClickEvent WITH CHECK ADD CONSTRAINT Message_ClickEvent_FK1 FOREIGN KEY (MessageID)REFERENCES Message (MessageID)ALTER TABLE SongStorePartner WITH CHECK ADD CONSTRAINT SongStore_SongStorePartner_FK1 FOREIGN KEY (SongStoreID)REFERENCES SongStore (SongStoreID)ALTER TABLE SongStorePartner WITH CHECK ADD CONSTRAINT Partner_SongStorePartner_FK1 FOREIGN KEY (PartnerID)REFERENCES Partner (PartnerID)ALTER TABLE Message WITH CHECK ADD CONSTRAINT User_Message_FK1 FOREIGN KEY (CreatedByUserID)REFERENCES User (UserID)ALTER TABLE Message WITH CHECK ADD CONSTRAINT RedNote_Message_FK1 FOREIGN KEY (RedNoteID)REFERENCES RedNote (RedNoteID)ALTER TABLE Message WITH CHECK ADD CONSTRAINT EndUser_Message_FK1 FOREIGN KEY (EndUserID)REFERENCES EndUser (EndUserID)ALTER TABLE Message WITH CHECK ADD CONSTRAINT Partner_Message_FK1 FOREIGN KEY (OriginPartnerID)REFERENCES Partner (PartnerID)ALTER TABLE SongStore WITH CHECK ADD CONSTRAINT Store_SongStore_FK1 FOREIGN KEY (StoreID)REFERENCES Store (StoreID)ALTER TABLE SongStore WITH CHECK ADD CONSTRAINT OriginalSong_SongStore_FK1 FOREIGN KEY (OriginalSongID)REFERENCES OriginalSong (OriginalSongID)ALTER TABLE Partner WITH CHECK ADD CONSTRAINT Organization_Partner_FK1 FOREIGN KEY (OrganizationID)REFERENCES Organization (OrganizationID)ALTER TABLE User WITH CHECK ADD CONSTRAINT Organization_User_FK1 FOREIGN KEY (OrganizationID)REFERENCES Organization (OrganizationID)ALTER TABLE UserRole WITH CHECK ADD CONSTRAINT Role_UserRole_FK1 FOREIGN KEY (RoleID)REFERENCES Role (RoleID)ALTER TABLE UserRole WITH CHECK ADD CONSTRAINT User_UserRole_FK1 FOREIGN KEY (UserID)REFERENCES User (UserID)ALTER TABLE EndUserAttributeValue WITH CHECK ADD CONSTRAINT EndUser_EndUserAttributeValue_FK1 FOREIGN KEY (EndUserID)REFERENCES EndUser (EndUserID)ALTER TABLE EndUserAttributeValue WITH CHECK ADD CONSTRAINT AttributeType_EndUserAttributeValue_FK1 FOREIGN KEY (AttributeTypeID)REFERENCES AttributeType (AttributeTypeID)*/